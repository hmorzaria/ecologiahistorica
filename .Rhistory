#| echo: false
source("libraries.R")
source("make_decades.R")
dibujos.table <- read_csv("Inventario_dibujos_participativos.csv")
dibujos.table
dibujos.table %>%
group_by(Estero) %>%
summarise(tot_species = sum(Presencia))
dibujos.table %>% filter(is.na(Estero))
dibujos.table %>% filter(is.na(Estero)) %>% distinct(Comunidad, `Numero de entrevista`)
dibujos.table <- read_csv("Inventario_dibujos_participativos.csv") %>%
separate(Comunidad, into=c("actividad","comunidad"), sep="-")
dibujos.table
ibujos.table <- read_csv("Inventario_dibujos_participativos.csv") %>%
separate(Comunidad, into=c("actividad","comunidad"), sep="-")
dibujos.table <- read_csv("Inventario_dibujos_participativos.csv") %>%
separate(Comunidad, into=c("actividad","comunidad"), sep="-")
dibujos.table
dibujos.table <- read_csv("Inventario_dibujos_participativos.csv") %>%
separate(Comunidad, into=c("comunidad", "actividad"), sep="-")
dibujos.table %>%
group_by(Estero) %>%
summarise(tot_species = sum(Presencia))
dibujos.table %>%
group_by(actividad) %>%
summarise(tot_species = sum(Presencia))
dibujos.table <- read_csv("Inventario_dibujos_participativos.csv") %>%
separate(Comunidad, into=c("comunidad", "actividad"), sep="-")
dibujos.table %>%
group_by(Estero) %>%
summarise(tot_species = sum(Presencia))
dibujos.table %>%
group_by(actividad) %>%
summarise(tot_species = sum(Presencia))
dibujos.table %>%
group_by(Estero) %>%
summarise(tot_species = sum(Presencia))
dibujos.table %>%
group_by(Especie) %>%
summarise(tot_species = sum(Presencia))
dibujos.table %>%
group_by(Estero, Especie) %>%
summarise(tot_species = sum(Presencia))
dibujos.table %>%
group_by(actividad) %>%
summarise(tot_species = sum(Presencia))
dibujos.table %>%
group_by(Especie) %>%
summarise(tot_species = sum(Presencia)) %>%
arrange(desc(tot_species))
dibujos.table %>%
group_by(Especie) %>%
summarise(tot_species = sum(Presencia)) %>%
arrange(desc(tot_species)) %>% View()
install.packages("spatialEco")
#| echo: false
source("libraries.R")
source("make_decades.R")
list.shapefiles <- list.files(here("shapefiles"), pattern = "*Decades_Spatial.shp$", full.names = TRUE)
list.shapefiles
eachshapefile = list.shapefile[1]
eachshapefile = list.shapefiles[1]
print(eachshapefile)
this.shapefile  <- st_read(eachshapefile)
names.shp <- names(this.shapefile)
names.shp
class(this.shapefile)
names.shp[6]
this.raster <- st_rasterize(this.shapefile, names.shp[6])
install.packages("stars")
source("~/ecologiahistorica/libraries.R")
this.raster <- st_rasterize(this.shapefile, names.shp[6])
this.shapefile
st_rasterize(this.shapefile %>% dplyr::select(MAX_GRID_C, geometry))
this.raster <- st_rasterize(this.shapefile %>% dplyr::select(MAX_GRID_C, geometry))
plot(this.raster)
this.raster.2 <- st_rasterize(this.shapefile %>% dplyr::select(MAX_GRID_1, geometry))\
this.raster.2 <- st_rasterize(this.shapefile %>% dplyr::select(MAX_GRID_1, geometry))
plot(this.raster.2)
class.comparison(this.raster,this.raster.2)
class(this.raster)
this.raster.ras  <- as(this.raster, "Raster")
this.raster.ras
plot(this.raster.ras)
this.raster.ras  <- as(this.raster, "Raster")
this.raster.ras.2  <- as(this.raster.2, "Raster")
class.comparison(this.raster.ras,this.raster.ras.2)
?class.comparison
class(this.raster.ras)
library(raster)
source("~/ecologiahistorica/libraries.R")
data("meuse.grid")
class(meuse.grid)
names.shp <- names(this.shapefile)
this.raster <- st_rasterize(this.shapefile %>% dplyr::select(MAX_GRID_C, geometry))
this.raster.2 <- st_rasterize(this.shapefile %>% dplyr::select(MAX_GRID_1, geometry))
this.raster.ras  <- as(this.raster, "Raster")
this.raster.ras.2  <- as(this.raster.2, "Raster")
this.pixel <- as(this.raster.ras, "SpatialPixelsDataFrame")
this.pixel.2 <- as(this.raster.ras.2, "SpatialPixelsDataFrame")
class.comparison(this.pixel,this.pixel.2)
names.shp
ames.shp <- names(this.shapefile)
if(length(names.shp)==11)
{
decade.names <- c("MAX_GRID_C", "MAX_GRID_1", "MAX_GRID_2", "MAX_GRID_3", "MAX_GRID_4")
}
if(length(names.shp)==10)
{
decade.names <- c("MAX_GRID_C", "MAX_GRID_1", "MAX_GRID_2", "MAX_GRID_3")
}
names.shp <- names(this.shapefile)
if(length(names.shp)==11)
{
decade.names <- c("MAX_GRID_C", "MAX_GRID_1", "MAX_GRID_2", "MAX_GRID_3", "MAX_GRID_4")
}
if(length(names.shp)==10)
{
decade.names <- c("MAX_GRID_C", "MAX_GRID_1", "MAX_GRID_2", "MAX_GRID_3")
}
layerno <- decade.names[1]
this.layer <- names.shp[layerno]
this.layer
layerno
this.raster <- st_rasterize(this.shapefile %>% dplyr::select(layerno, geometry))
this.raster
this.raster <- st_rasterize(this.shapefile %>% dplyr::select(all_of(layerno), geometry)) %>%
as(.,"Raster")
this.raster
plot(this.raster)
layerno=1
this.layer <- decades.names[layerno]
this.label <- decades.label[layerno]
if(length(names.shp)==11)
{
decade.names <- c("MAX_GRID_C", "MAX_GRID_1", "MAX_GRID_2", "MAX_GRID_3", "MAX_GRID_4")
decades.label <- c("50","60","70","80","90")
}
if(length(names.shp)==10)
{
decade.names <- c("MAX_GRID_C", "MAX_GRID_1", "MAX_GRID_2", "MAX_GRID_3")
decades.label <- c("50","60","70","80")
}
1:length(decade.names)
layerno=1
this.layer <- decades.names[layerno]
this.label <- decades.label[layerno]
this.raster <- st_rasterize(this.shapefile %>% dplyr::select(all_of(this.layer), geometry)) %>%
as(.,"Raster")
if(length(names.shp)==11)
{
decade.names <- c("MAX_GRID_C", "MAX_GRID_1", "MAX_GRID_2", "MAX_GRID_3", "MAX_GRID_4")
decade.label <- c("50","60","70","80","90")
}
if(length(names.shp)==10)
{
decade.names <- c("MAX_GRID_C", "MAX_GRID_1", "MAX_GRID_2", "MAX_GRID_3")
decade.label <- c("50","60","70","80")
}
this.layer <- decade.names[layerno]
this.label <- decade.label[layerno]
this.raster <- st_rasterize(this.shapefile %>% dplyr::select(all_of(this.layer), geometry)) %>%
as(.,"Raster")
this.raster
plot(this.raster)
this.layer
this.shapefile
eachshapefile
wetland.name <- str_split(eachshapefile, "/")
wetland.name
wetland.name <- str_split(eachshapefile, "/") %>%
unlist %>%
.[6] %>%
str_split(.,"_") %>%
unlist %>%
.[1]
wetland.name
writeRaster(this.raster, filename = here("rasters",paste(wetland.name, "_",this.label)), format = "ascii", overwrite = TRUE)
}
writeRaster(this.raster, filename = here("rasters",paste(wetland.name, "_",this.label)), format = "ascii", overwrite = TRUE)
writeRaster(this.raster, filename = here("rasters",paste(wetland.name, this.label,"raster" , sep = "_")), format = "ascii", overwrite = TRUE)
raster.change(this.raster.ras, this.raster.ras.2)
kappa.ras <- raster.change(this.raster.ras, this.raster.ras.2, stat = "kappa")
kappa.ras
plot(kappa.ras)
unique(kappa.ras)
?raster.change
kappa.ras <- raster.change(this.raster.ras, this.raster.ras.2, stat = "kappa", mask = TRUE)
lvs <- c("normal", "abnormal")
truth <- factor(rep(lvs, times = c(86, 258)),
levels = rev(lvs))
pred <- factor(
c(
rep(lvs, times = c(54, 32)),
rep(lvs, times = c(27, 231))),
levels = rev(lvs))
xtab <- table(pred, truth)
xtab
install.packages("remotes")
remotes::install_github("albhasan/sits.prodes")
# List of packages for session
.packages = c("devtools","stringi","data.table","tidyverse","sp", "sf","here",
"spatialEco", "stars", "raster", "sits.prodes")
#devtools::install_github("vr-vr/itsadug", build_vignettes=TRUE)
#library(itsadug)
# Install CRAN packages (if not already installed)
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
# Load packages into session
lapply(.packages, require, character.only=TRUE)
install.packages("remotes")
source("~/ecologiahistorica/make_raster.R")
list.shapefiles <- list.files(here("shapefiles"), pattern = "*Decades_Spatial_.shp$", full.names = TRUE)
lapply(list.shapefiles, make_raster)
list.shapefiles
here()
list.shapefiles <- list.files(here("shapefiles"), pattern = "*Decades_Spatial.shp$", full.names = TRUE)
list.shapefiles
lapply(list.shapefiles, make_raster)
eachshapefile = "/home/atlantis/ecologiahistorica/shapefiles/BA_F_Decades_Spatial.shp"
print(eachshapefile)
wetland.name <- str_split(eachshapefile, "/") %>%
unlist %>%
.[6] %>%
str_split(.,"_") %>%
unlist %>%
.[1]
this.shapefile  <- st_read(eachshapefile)
names.shp <- names(this.shapefile)
names.shp
any(names.shp)=="MAX_GRID_4"
?any
grepl("MAX_GRID_4",names.shp)
any(grepl("MAX_GRID_4",names.shp))
any(grepl("MAX_GRID_4",names.shp))==TRUE
source("~/ecologiahistorica/make_raster.R")
list.shapefiles <- list.files(here("shapefiles"), pattern = "*Decades_Spatial.shp$", full.names = TRUE)
lapply(list.shapefiles, make_raster)
